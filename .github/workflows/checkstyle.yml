name: checkstyle

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      CI_ENV:
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ASSUME_ROLE_ARN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

env:
  TF_LOG: DEBUG
  TF_LOG_PATH: ./terraform.log

jobs:
  terraform:
    name: Terraform format, validate, plan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials , Assume role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Detect Terraform version
        run: |
          printf "TF_VERSION=%s" $(cat .terraform-version) >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform format check
        working-directory: ./
        run: |
          terraform fmt -recursive -check

      - name: Terraform validation
        working-directory: ./
        run: |
          terraform init
          terraform workspace select ${{ inputs.CI_ENV }} 2>/dev/null || terraform workspace new ${{ inputs.CI_ENV }}
          terraform validate

      - name: Terraform plan
        working-directory: ./
        run: |
          terraform plan -no-color

      - name: Show Terraform log
        run: |
          cat ${{ env.TF_LOG_PATH }}
        if: always()

      - name: Notify failure
        uses: 8398a7/action-slack@v3.12.0
        with:
          status: ${{ job.status }}
          author_name: ${{ github.workflow }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
        